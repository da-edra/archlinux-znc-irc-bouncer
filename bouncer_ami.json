{
  "description": "Builds an Amazon Linux 2 AMI with ZNC IRC Bouncer and Proxychains for Tor",
  "variables": {
    "aws_profile": "personal",
    "aws_region": "us-east-1"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "name": "ZNC IRC Bouncer",
      "ssh_username": "ec2-user",
      "instance_type": "t3.micro",
      "region": "{{user `aws_region`}}",
      "profile": "{{user `aws_profile`}}",
      "ami_name": "irc-bouncer-ami",
      "ami_description": "Amazon Linux 2 AMI with ZNC IRC Bouncer and Proxychains for Tor",
      "force_deregister": "true",
      "force_delete_snapshot": "true",
      "encrypt_boot": true,
      "source_ami_filter": {
        "filters": {
          "virtualization-type": "hvm",
          "name": "amzn2-ami-hvm-*-x86_64-gp2",
          "root-device-type": "ebs"
        },
        "owners": ["137112412989", "591542846629", "801119661308",
                   "102837901569", "013907871322", "206029621532",
                   "286198878708", "443319210888"
                  ],
        "most_recent": true
      }
    }
  ],
  "provisioners": [
    {
      "type":        "file",
      "source":      "provisioner/hardening.sh",
      "destination": "/tmp/hardening.sh"
    },
    {
      "type":        "file",
      "source":      "provisioner/totp.sh",
      "destination": "/tmp/totp.sh"
    },
    {
      "type":        "file",
      "source":      "provisioner/banner",
      "destination": "/tmp/banner"
    },
    {
      "type": "ansible",
      "playbook_file": "./provisioner/user.yml",
      "extra_arguments": [ "--become" ]
    },
    {
      "type": "ansible",
      "playbook_file": "./provisioner/packages.yml",
      "extra_arguments": [ "--become" ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo chmod +x /tmp/user.sh /tmp/packages.sh /tmp/hardening.sh /tmp/totp.sh",
        "sudo /tmp/user.sh",
        "sudo /tmp/packages.sh",
        "sudo /tmp/hardening.sh",
        "sudo mv /tmp/banner /etc/ssh/banner",
        "sudo cp /tmp/totp.sh /home/bouncie/totp.sh",
        "systemctl status sshd",
        "sudo firewall-cmd --list-services",
        "rm .ssh/authorized_keys ; sudo rm /root/.ssh/authorized_keys"
      ]
    }
  ]
}
